CATEGORY="Libs"
SUMMARY="Boehm-Demers-Weiser garbage collector library"
DESCRIPTION="The Boehm-Demers-Weiser conservative garbage collector can be
used as a garbage collecting replacement for C malloc or C++ new. It
allows you to allocate memory basically as you normally would, without
explicitly deallocating memory that is no longer useful. The collector
automatically recycles memory when it determines that it can no longer
be otherwise accessed."
HOMEPAGE="http://www.hpl.hp.com/personal/Hans_Boehm/gc/"
SRC_URI="${HOMEPAGE}/gc_source/gc-${PV}.tar.gz"
SRC_DIR="gc-${PV%[a-z]}"

PKG_NAMES="libgc1 libgc-devel libatomic_ops-devel"
libgc1_CONTENTS='usr/bin/*-1.dll'
libgc_devel_CONTENTS="--exclude=*atomic_ops* usr/include/ usr/lib/ usr/share/doc/libgc/"
libatomic_ops_devel_SUMMARY="Atomic memory update operation library"
libatomic_ops_devel_CONTENTS="usr/include/atomic* usr/lib/libatomic*
                              usr/lib/pkgconfig/atomic* usr/share/doc/libatomic_ops/"

DIFF_EXCLUDES="*.pc"

CYGCONF_ARGS="--enable-cplusplus --enable-threads=pthreads --without-libatomic-ops"

src_install() {
	cd ${B}
	cyginstall
	cd ${B}/libatomic_ops
	cyginstall

	rm -fr ${D}/usr/share/{libatomic_ops,gc}/
	dodoc ${S}/doc/README{,.{contributors,cords,environment,win32}}
	docinto /libatomic_ops
	dodoc ${S}/libatomic_ops/{COPYING,README}
	dodoc ${S}/libatomic_ops/doc/{LICENSING,README{,_malloc,_stack}}.txt
}

KEEP_LA_FILES="none"
